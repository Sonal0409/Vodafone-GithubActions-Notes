1. Fork the nodejs repository:

https://github.com/Sonal0409/Nodejs-GithubActions-Conditions.git

Go to actions and setup your workflow and add below code

name: nodejs App Build 
on: 
 push:
  branches:
   - master
jobs:
 test:
  runs-on: ubuntu-latest
  steps:
   - name: Clone the repo
     uses: actions/checkout@v4

Save and see the workflow execution

Demo 2: Test the code:

name: nodejs App Build 
on: 
 push:
  branches:
   - master
jobs:
 test:
  runs-on: ubuntu-latest
  steps:
   - name: Clone the repo
     uses: actions/checkout@v4
   - name: Install dependencies
     run: npm ci
   - name: Test code
     run: npm run test

Demo3: Review + test + build Code -> parallel and sequential jobs


name: nodejs App Build 
on: 
 push:
  branches:
   - master
jobs:
 lint-job1:
  runs-on: ubuntu-latest
  steps:
    - name: Clone the repo
      uses: actions/checkout@v4
    - name: Install dependencies
      run: npm ci
    - name: Test code
      run: npm run lint
 test-job2:
  runs-on: ubuntu-latest
  steps:
   - name: Clone the repo
     uses: actions/checkout@v4
   - name: Install dependencies
     run: npm ci
   - name: Test code
     run: npm run test
 build-job3:
  needs: test-job2
  runs-on: ubuntu-latest
  steps:
   - name: Clone the repo
     uses: actions/checkout@v4
   - name: Install dependencies
     run: npm ci
   - name: Build code
     run: npm run build


=========================================================
Upload artifact from runner to github repo

Upload Artifact : 
===========================
Suppose a step in a job generates a file or an artifact 
and from the runner machine we want to fetch it on our github repo 
Then we use uploadArtifact concept

Artifact is on Runner --> upload it --> github repo 



name: nodejs App Build 
on: 
 push:
  branches:
   - master
jobs:
 lint-job1:
  runs-on: ubuntu-latest
  steps:
    - name: Clone the repo
      uses: actions/checkout@v4
    - name: Install dependencies
      run: npm ci
    - name: Test code
      run: npm run lint
 test-job2:
  runs-on: ubuntu-latest
  steps:
   - name: Clone the repo
     uses: actions/checkout@v4
   - name: Install dependencies
     run: npm ci
   - name: Test code
     run: npm run test
   - name: Upload test report on github 
     uses: actions/upload-artifact@v4
     with:
      name: test-report
      path: test.json
 build-job3:
  needs: test-job2
  runs-on: ubuntu-latest
  steps:
   - name: Clone the repo
     uses: actions/checkout@v4
   - name: Install dependencies
     run: npm ci
   - name: Build code
     run: npm run build


===============================================================
Download Artifact from one job to another Job
=========================================================

Suppose a job generates a file or an artifact 
We want to use that artifact as an input to the next job 
the we use action downloadArtifact

Artifact is on Runner of Job1 --> download it --> on the runner of Job2


name: nodejs App Build 
on: 
 push:
  branches:
   - master
jobs:
 lint-job1:
  runs-on: ubuntu-latest
  steps:
    - name: Clone the repo
      uses: actions/checkout@v4
    - name: Install dependencies
      run: npm ci
    - name: Test code
      run: npm run lint
 test-job2:
  runs-on: ubuntu-latest
  steps:
   - name: Clone the repo
     uses: actions/checkout@v4
   - name: Install dependencies
     run: npm ci
   - name: Test code
     run: npm run test
   - name: Upload test report on github 
     uses: actions/upload-artifact@v4
     with:
      name: test-report
      path: test.json
 build-job3:
  needs: test-job2
  runs-on: ubuntu-latest
  steps:
   - name: Clone the repo
     uses: actions/checkout@v4
   - name: Install dependencies
     run: npm ci
   - name: Build code
     run: npm run build
   - name: Upload Artifact on github
     uses: actions/upload-artifact@v4
     with:
      name: dist-files 
      path: dist
 deploy-job4:
  needs: build-job3
  runs-on: ubuntu-latest
  steps:
   - name: Get the build artifacts 
     uses: actions/download-artifact@v4
     with: 
      name: dist-files
   - name: Validate it
     run: ls
   - name: Deploy Code 
     run: echo "deploying.."

====================================================
If condition and special functions:
=======================================================

Go to the repo --> src folder --> components--> take the last file MainContent.test.jsx --> edit the last line --> replace 'help-area' with 'help-are'

Now run the below code->  the test step has failed--> repo steps is executed. if test step is passed, report step will be skipped.



name: nodejs App Build 
on: 
 push:
  branches:
   - master
jobs:
 test-job:
  runs-on: ubuntu-latest
  steps:
   - name: Clone the repo
     uses: actions/checkout@v4
   - name: Install dependencies
     run: npm ci
   - name: Test code
     id: run-tests
     run: npm run test
   - name: Upload test report on github 
     if: failure() && steps.run-tests.outcome == 'failure'
     uses: actions/upload-artifact@v4
     with:
      name: test-report
      path: test.json



4 types of special functions which are used in the if conditions

failure(): if any previous steps has failed , function returns value = true
success(): if any previous steps has success , function returns value = true
always(): even if previous steps have been cancelled, always run the current step
cancelled(): if previous steps have been cancelled, run the current steps

=======================================================================
Continue to run on error. Even if the current step fails, github workflow will continue to run the next steps.


name: nodejs App Build 
on: 
 push:
  branches:
   - master
jobs:
 test-job:
  runs-on: ubuntu-latest
  steps:
   - name: Clone the repo
     uses: actions/checkout@v4
   - name: Install dependencies
     run: npm ci
   - name: Test code
     id: run-tests
     continue-on-error: true
     run: npm run test
   - name: Upload test report on github 
     uses: actions/upload-artifact@v4
     with:
      name: test-report
      path: test.json

=========================================================
Conditions on the Job
=============================================================

name: Upload and download artifact or a file from Runner to github repo and to another job
on: 
 push:
  branches:
   - main
jobs:
 uploadArtifactJob:
  runs-on: ubuntu-latest
  steps:
   - name: Create a directory
     run: mkdir -p /tmp
   - name: create a file in the directory
     run: echo "Hello from runner" > /tmp/artifact.txt
   - name: Upload
     uses: actions/upload-artifact@v4
     with:
      name: myartifact
      path: /tmp/artifact.txt
 downloadArtifactjob:
  needs: uploadArtifactJob
  if: failure()
  runs-on: ubuntu-latest
  steps:
   - name: Download artifact from previous Job
     uses: actions/download-artifact@v4
     with:
      name: myartifact
   - name: Check if artifact is downloaded
     run: ls -R 








